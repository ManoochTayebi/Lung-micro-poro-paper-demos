################################################################################
###                                                                          ###
### Created by Mahdi Manoochehrtayebi                                        ###
### Jupyter Book Build and Deploy - Alternative Version                      ###
### Ã‰cole Polytechnique, Palaiseau, France                                   ###
###                                                                          ###
################################################################################

name: Build and Deploy Jupyter Book (Alternative)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.10.12  # Match the Python version in environment.yml
          auto-update-conda: true

      # Create Conda environment
      - name: Create Conda environment
        run: |
          conda env create -f .repo2docker/environment.yml
          
      # Install Jupyter Book & nbconvert
      - name: Install Jupyter Book & nbconvert
        run: pip install jupyter-book nbconvert

      # Build Jupyter Book
      - name: Build Jupyter Book
        run: jupyter-book build .

      # Copy static files (PDFs, images) to the output directory
      - name: Copy static files
        run: |
          echo "Copying static files..."
          find demos -name "*.pdf" -exec cp {} _build/html/ \;
          find demos -name "*.png" -exec cp {} _build/html/ \;
          find demos -name "*.jpg" -exec cp {} _build/html/ \;
          find demos -name "*.jpeg" -exec cp {} _build/html/ \;
          find demos -name "*.tif" -exec cp {} _build/html/ \;
          find demos -name "*.tiff" -exec cp {} _build/html/ \;

      # Convert Notebooks to HTML
      - name: Convert Jupyter Notebooks to HTML
        run: |
          mkdir -p notebooks_html
          find demos -name "*.ipynb" ! -name "* copy.ipynb" ! -name "*~" ! -name ".*" -exec jupyter nbconvert --to html --output-dir notebooks_html {} \;

      # Prepare final directory
      - name: Prepare deployment directory
        run: |
          rm -rf docs
          cp -r _build/html docs
          if [ -d "notebooks_html" ]; then
            mkdir -p docs/notebooks
            cp -r notebooks_html/* docs/notebooks/
          fi

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
          
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4